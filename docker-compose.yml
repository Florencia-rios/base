version: '3.8'

services:

  boletines-oficiales:
    ports:
      - "8080:8080"
    build:
      context: ./BACK-boletines-oficiales
      dockerfile: Dockerfile
    container_name: boletines-oficiales
    networks:
      - boletines-oficiales-network
    restart: "no"
    environment:
      - PORT=8080
      - DB_HOST=
      - DB_PORT=5432
      - DB_DATABASE=
      - DB_USERNAME=
      - DB_PASSWORD=
    ##variables de servicio nlp
      - NLP_SRV_URL=http://localhost:5000/api
      - NLP_SRV_ENTIDAD_BO=/entidades/bo
      - NLP_SRV_ENTIDAD_SOC=/entidades/soc
      - NLP_SRV_ARCHIVOS=/csv

  nlp-boletines-oficiales:
    ports:
      - "5000:5000"
    build:
      context: .
      dockerfile: ./NLP-boletines-oficiales/Dockerfile
    container_name: nlp-boletines-oficiales
    networks:
      - boletines-oficiales-network
    restart: "no"
    environment:
      #MODIFICACIONES NECESARIAS PARA ENCRIPTADO DE VALOR (*)
      #(*) echo "[VALOR_PARA_OCULTAR]" | docker secret create my_secret_password -
      - OPENAI_API_KEY=drios_api_key
    volumes:
      - ./NLP-boletines-oficiales:/app/NLP-boletines-oficiales
    #(*)secret:
    #   - my_secret_password

  postgresql-host:
    container_name: postgresql-host
    build:
      context: .
      dockerfile: data/Dockerfile
    restart: "no"
    environment:
      - POSTGRES_DB=boletinesoficiales
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=
    ports:
      - "5432:5432"
    networks:
      - boletines-oficiales-network
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./data/init-sql.sql:/docker-entrypoint-initdb.d/init-sql.sql

  nginx_server:
    container_name: nginx_server
    build:
      context: .
      dockerfile: Nginx-config/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./NLP-boletines-oficiales/src/static/:/usr/share/nginx/html/static
      - ./NLP-boletines-oficiales/src/templates/:/usr/share/nginx/html/templates
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - boletines-oficiales-network
    depends_on:
      - nlp-boletines-oficiales
      - boletines-oficiales
   #   - postgresql-host
  
  #(*)secrest:
  #     my_secret_password:
  #       external: true

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; certbot renew; done'"

networks:
  boletines-oficiales-network:
    driver: bridge
#volumes:
#  db_data: